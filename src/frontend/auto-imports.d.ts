/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-auto-import
export {}
declare global {
  const CodeBlockComponent: typeof import('./src/components/editor/CodeBlockComponent.vue')['default']
  const EffectScope: typeof import('vue')['EffectScope']
  const MenuBar: typeof import('./src/components/editor/MenuBar.vue')['default']
  const MenuItem: typeof import('./src/components/editor/MenuItem.vue')['default']
  const SWITCH_ENCRYPT_STATUS: typeof import('./src/global/const')['SWITCH_ENCRYPT_STATUS']
  const SWITCH_PUBLISH_STATUS: typeof import('./src/global/const')['SWITCH_PUBLISH_STATUS']
  const SearchAI: typeof import('./src/global/const')['SearchAI']
  const SearchSite: typeof import('./src/global/const')['SearchSite']
  const ToolEditor: typeof import('./src/components/ToolEditor.vue')['default']
  const Upload: typeof import('./src/components/editor/Upload.vue')['default']
  const article: typeof import('./src/store/articlelist/article')['default']
  const axios: typeof import('./src/utils/axios')['default']
  const backendExtensions: typeof import('./src/common/tiptap/tiptap-extensions')['backendExtensions']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const effectScope: typeof import('vue')['effectScope']
  const frontendExtensions: typeof import('./src/common/tiptap/tiptap-extensions')['frontendExtensions']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const global: typeof import('./src/routes/global')['default']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const key: typeof import('./src/store/store')['key']
  const loading: typeof import('./src/store/session/loading')['default']
  const localGet: typeof import('./src/utils/index')['localGet']
  const localRemove: typeof import('./src/utils/index')['localRemove']
  const localSessionGet: typeof import('./src/utils/index')['localSessionGet']
  const localSessionSet: typeof import('./src/utils/index')['localSessionSet']
  const localSet: typeof import('./src/utils/index')['localSet']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const pasteHandle: typeof import('./src/common/tiptap/paste-handle')['default']
  const provide: typeof import('vue')['provide']
  const randomString: typeof import('./src/utils/sign')['randomString']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const routes: typeof import('./src/routes/index')['default']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const sign: typeof import('./src/utils/sign')['sign']
  const store: typeof import('./src/store/store')['store']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useLink: typeof import('vue-router')['useLink']
  const useMouse: typeof import('@vueuse/core')['useMouse']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const useStore: typeof import('./src/store/store')['useStore']
  const utils: typeof import('./src/common/utils')['default']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, InjectionKey, PropType, Ref, VNode } from 'vue'
  // @ts-ignore
  export type { RouteLocationRaw } from 'vue-router'
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface ComponentCustomProperties {
    readonly CodeBlockComponent: UnwrapRef<typeof import('./src/components/editor/CodeBlockComponent.vue')['default']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly MenuBar: UnwrapRef<typeof import('./src/components/editor/MenuBar.vue')['default']>
    readonly MenuItem: UnwrapRef<typeof import('./src/components/editor/MenuItem.vue')['default']>
    readonly SWITCH_ENCRYPT_STATUS: UnwrapRef<typeof import('./src/global/const')['SWITCH_ENCRYPT_STATUS']>
    readonly SWITCH_PUBLISH_STATUS: UnwrapRef<typeof import('./src/global/const')['SWITCH_PUBLISH_STATUS']>
    readonly SearchAI: UnwrapRef<typeof import('./src/global/const')['SearchAI']>
    readonly SearchSite: UnwrapRef<typeof import('./src/global/const')['SearchSite']>
    readonly ToolEditor: UnwrapRef<typeof import('./src/components/ToolEditor.vue')['default']>
    readonly Upload: UnwrapRef<typeof import('./src/components/editor/Upload.vue')['default']>
    readonly article: UnwrapRef<typeof import('./src/store/articlelist/article')['default']>
    readonly axios: UnwrapRef<typeof import('./src/utils/axios')['default']>
    readonly backendExtensions: UnwrapRef<typeof import('./src/common/tiptap/tiptap-extensions')['backendExtensions']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly frontendExtensions: UnwrapRef<typeof import('./src/common/tiptap/tiptap-extensions')['frontendExtensions']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly global: UnwrapRef<typeof import('./src/routes/global')['default']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly key: UnwrapRef<typeof import('./src/store/store')['key']>
    readonly loading: UnwrapRef<typeof import('./src/store/session/loading')['default']>
    readonly localGet: UnwrapRef<typeof import('./src/utils/index')['localGet']>
    readonly localRemove: UnwrapRef<typeof import('./src/utils/index')['localRemove']>
    readonly localSessionGet: UnwrapRef<typeof import('./src/utils/index')['localSessionGet']>
    readonly localSessionSet: UnwrapRef<typeof import('./src/utils/index')['localSessionSet']>
    readonly localSet: UnwrapRef<typeof import('./src/utils/index')['localSet']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeRouteLeave: UnwrapRef<typeof import('vue-router')['onBeforeRouteLeave']>
    readonly onBeforeRouteUpdate: UnwrapRef<typeof import('vue-router')['onBeforeRouteUpdate']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly pasteHandle: UnwrapRef<typeof import('./src/common/tiptap/paste-handle')['default']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly randomString: UnwrapRef<typeof import('./src/utils/sign')['randomString']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly routes: UnwrapRef<typeof import('./src/routes/index')['default']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly sign: UnwrapRef<typeof import('./src/utils/sign')['sign']>
    readonly store: UnwrapRef<typeof import('./src/store/store')['store']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useLink: UnwrapRef<typeof import('vue-router')['useLink']>
    readonly useMouse: UnwrapRef<typeof import('@vueuse/core')['useMouse']>
    readonly useRoute: UnwrapRef<typeof import('vue-router')['useRoute']>
    readonly useRouter: UnwrapRef<typeof import('vue-router')['useRouter']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useStore: UnwrapRef<typeof import('./src/store/store')['useStore']>
    readonly utils: UnwrapRef<typeof import('./src/common/utils')['default']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}
